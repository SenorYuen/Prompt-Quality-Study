a. Understand the Overall Purpose:
    - The DocFileHandler is a class that handles Word documents and provides functionalities for reading, writing, and modifying the content of Word documents.
b. Identify the Required Methods:      
    - To ensure the function of this class, it will need all of these methods:
        - Initializes the DocFileHandler object (__init__)
        - Reads the content of a Word document and returns it (read_text)
        - Writes the specified content (write_text)
        - Adds a heading to the Word document (add_heading)
        - Adds a table to the Word document (add_table)
        - Returns the alignment value ( _get_alignment_value)
c. Detail each method:
    - __init__(self, file_path):
        - This method will act as the constructor. 
        - This method will initialize the DocFileHandler object with the specified file path.
        - This Method will accept "file_path" as str which is the path to the Word document file.
        - self.file_path = file_path
    - read_text(self):
        - This method will read the content of a Word document and return it as a string.
        - This Method will return "file_path" the content of the Word document as str.
    - write_text(self, content, font_size=12, alignment='left'):
        - This method will write the specified content to a Word document.
        - This Method will accept "content" as str which is the text content to write, "font_size" int which is optional and represents font size of the text (default is 12), "alignment" as str, which is optional and represents the alignment of the text ('left', 'center', or 'right'; default is 'left').  
        - This method will return True if the write operation is successful, False otherwise.
    - add_heading(self, heading, level=1):
        - This method will add a table to the Word document with the specified data.
        - This Method will accept "data" as list of lists which is the data to populate the table.
        - This method will return True if the table is successfully added, False otherwise.
    - _get_alignment_value(self, alignment):
        - This method will return the alignment value corresponding to the given alignment string.
        - This Method will accept "alignment" as str which is the alignment string ('left', 'center', or 'right').
        - This method will return the alignment value as int.
d. Plan the implementation:
    - For each method, consider the input parameters, the actions that must be performed, and the expected outcome. 
e. Import statements:
    - from docx import Document
    - from docx.shared import Pt
    - from docx.enum.text import WD_PARAGRAPH_ALIGNMENT
f. Implement the methods:
    - Write the code for each method step-by-step, following this outlined plan. Please only include the code output in your response, and do not include example usage or test cases in this code. 
