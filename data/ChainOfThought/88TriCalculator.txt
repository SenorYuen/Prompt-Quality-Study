a. Understand the Overall Purpose:
    - The TriCalculator class will calculate trigonometric values, including cosine, sine, and tangent, using Taylor series approximations.
b. To ensure the function of this class, it will need all of these methods:
    - Calculate the cos value (cos)
    - Calculate the factorial of a number (factorial)
    - Finding the n-order Taylor expansion (taylor)
    - Calculate the sin value (sin)
    - Calculate the tan value (tan)
c. Detail each method:
    - __init__(self):
        - pass
    - cos(self, x):
        - This method will calculate the cos value of the x-degree angle.
        - This method will get "x" as float. 
        - This method will return the cos value of the x-degree angle as float.
        - Example Usage:   
        - >>> tricalculator = TriCalculator()
        - >>> tricalculator.cos(60)
        - >>> The expected return value for example usage is : 0.5
    - factorial(self, a):
        - This method will calculate the factorial of a.
        - This method will get "a" as int. 
        - This method will return the factorial of "a" as int.
        - Example Usage:   
        - >>> tricalculator.factorial(5)
        - >>> The expected return value for example usage is : 120
    - taylor(self, x, n):
        - This method will find the n-order Taylor expansion value of cos (x/180 * pi).
        - This method will get "x" as int, "n" as int. 
        - This method will return the n-order Taylor expansion value of cos (x/180 * pi) as float.
        - Example Usage:   
        - >>> tricalculator.taylor(60, 50)
        - >>> The expected return value for example usage is :  0.5000000000000001      
    - sin(self, x):
        - This method will calculate the sin value of the x-degree angle.
        - This method will get "x" as float. 
        - This method will return sin value of the x-degree angle as float.
        - Example Usage:   
        - >>> tricalculator = TriCalculator()
        - >>> tricalculator.sin(30)
        - >>> The expected return value for example usage is : 0.5
    - tan(self, x):
        - This method will calculate the tan value of the x-degree angle.
        - This method will get "x" as float. 
        - This method will return tan value of the x-degree angle as float.
        - Example Usage:   
        - >>> tricalculator = TriCalculator()
        - >>> tricalculator.tan(60)
        - >>> The expected return value for example usage is : 1.0      
d. Plan the implementation:
    - For each method, consider the input parameters, the actions that must be performed, and the expected outcome. 
e. Import statements:
    - from math import pi, fabs
f. Implement the methods:
    - Write the code for each method step-by-step, following this outlined plan. Please only include the code output in your response, and do not include example usage or test cases in this code.           
